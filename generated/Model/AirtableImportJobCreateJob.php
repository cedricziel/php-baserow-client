<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Model;

class AirtableImportJobCreateJob extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The type of the job.
     *
     * `duplicate_application` - duplicate_application
     * `install_template` - install_template
     * `create_snapshot` - create_snapshot
     * `restore_snapshot` - restore_snapshot
     * `airtable` - airtable
     * `file_import` - file_import
     * `duplicate_table` - duplicate_table
     * `duplicate_field` - duplicate_field
     * `duplicate_page` - duplicate_page
     * `publish_domain` - publish_domain
     * `audit_log_export` - audit_log_export
     *
     * @var string
     */
    protected $type;
    /**
     * The group ID where the Airtable base must be imported into.
     *
     * @var int
     */
    protected $groupId;
    /**
     * The workspace ID where the Airtable base must be imported into.
     *
     * @var int
     */
    protected $workspaceId;
    /**
     * The publicly shared URL of the Airtable base (e.g. https://airtable.com/shrxxxxxxxxxxxxxx).
     *
     * @var string
     */
    protected $airtableShareUrl;

    /**
     * The type of the job.
     *
     * `duplicate_application` - duplicate_application
     * `install_template` - install_template
     * `create_snapshot` - create_snapshot
     * `restore_snapshot` - restore_snapshot
     * `airtable` - airtable
     * `file_import` - file_import
     * `duplicate_table` - duplicate_table
     * `duplicate_field` - duplicate_field
     * `duplicate_page` - duplicate_page
     * `publish_domain` - publish_domain
     * `audit_log_export` - audit_log_export
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * The type of the job.
     *
     * `duplicate_application` - duplicate_application
     * `install_template` - install_template
     * `create_snapshot` - create_snapshot
     * `restore_snapshot` - restore_snapshot
     * `airtable` - airtable
     * `file_import` - file_import
     * `duplicate_table` - duplicate_table
     * `duplicate_field` - duplicate_field
     * `duplicate_page` - duplicate_page
     * `publish_domain` - publish_domain
     * `audit_log_export` - audit_log_export
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * The group ID where the Airtable base must be imported into.
     */
    public function getGroupId(): int
    {
        return $this->groupId;
    }

    /**
     * The group ID where the Airtable base must be imported into.
     */
    public function setGroupId(int $groupId): self
    {
        $this->initialized['groupId'] = true;
        $this->groupId = $groupId;

        return $this;
    }

    /**
     * The workspace ID where the Airtable base must be imported into.
     */
    public function getWorkspaceId(): int
    {
        return $this->workspaceId;
    }

    /**
     * The workspace ID where the Airtable base must be imported into.
     */
    public function setWorkspaceId(int $workspaceId): self
    {
        $this->initialized['workspaceId'] = true;
        $this->workspaceId = $workspaceId;

        return $this;
    }

    /**
     * The publicly shared URL of the Airtable base (e.g. https://airtable.com/shrxxxxxxxxxxxxxx).
     */
    public function getAirtableShareUrl(): string
    {
        return $this->airtableShareUrl;
    }

    /**
     * The publicly shared URL of the Airtable base (e.g. https://airtable.com/shrxxxxxxxxxxxxxx).
     */
    public function setAirtableShareUrl(string $airtableShareUrl): self
    {
        $this->initialized['airtableShareUrl'] = true;
        $this->airtableShareUrl = $airtableShareUrl;

        return $this;
    }
}
