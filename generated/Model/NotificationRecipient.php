<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Model;

class NotificationRecipient extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The id of the notification.
     *
     * @var int
     */
    protected $id;
    /**
     * The type of notification.
     *
     * @var string
     */
    protected $type;
    /**
     * The user that sent the notification.
     *
     * @var NotificationRecipientSender
     */
    protected $sender;
    /**
     * The workspace that the notification is in (if any).
     *
     * @var string
     */
    protected $workspace;
    /**
     * The date and time that the notification was created.
     *
     * @var \DateTime
     */
    protected $createdOn;
    /**
     * If True, then the notification has been read by the user.
     *
     * @var bool
     */
    protected $read;
    /**
     * The data associated with the notification.
     */
    protected $data;

    /**
     * The id of the notification.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * The id of the notification.
     */
    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The type of notification.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * The type of notification.
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * The user that sent the notification.
     */
    public function getSender(): NotificationRecipientSender
    {
        return $this->sender;
    }

    /**
     * The user that sent the notification.
     */
    public function setSender(NotificationRecipientSender $sender): self
    {
        $this->initialized['sender'] = true;
        $this->sender = $sender;

        return $this;
    }

    /**
     * The workspace that the notification is in (if any).
     */
    public function getWorkspace(): string
    {
        return $this->workspace;
    }

    /**
     * The workspace that the notification is in (if any).
     */
    public function setWorkspace(string $workspace): self
    {
        $this->initialized['workspace'] = true;
        $this->workspace = $workspace;

        return $this;
    }

    /**
     * The date and time that the notification was created.
     */
    public function getCreatedOn(): \DateTime
    {
        return $this->createdOn;
    }

    /**
     * The date and time that the notification was created.
     */
    public function setCreatedOn(\DateTime $createdOn): self
    {
        $this->initialized['createdOn'] = true;
        $this->createdOn = $createdOn;

        return $this;
    }

    /**
     * If True, then the notification has been read by the user.
     */
    public function getRead(): bool
    {
        return $this->read;
    }

    /**
     * If True, then the notification has been read by the user.
     */
    public function setRead(bool $read): self
    {
        $this->initialized['read'] = true;
        $this->read = $read;

        return $this;
    }

    /**
     * The data associated with the notification.
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * The data associated with the notification.
     */
    public function setData($data): self
    {
        $this->initialized['data'] = true;
        $this->data = $data;

        return $this;
    }
}
