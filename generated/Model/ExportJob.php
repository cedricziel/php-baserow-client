<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Model;

class ExportJob extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $id;
    /**
     * @var int|null
     */
    protected $table;
    /**
     * @var int|null
     */
    protected $view;
    /**
     * @var string
     */
    protected $exporterType;
    /**
     * * `pending` - pending
     * `exporting` - exporting
     * `cancelled` - cancelled
     * `finished` - finished
     * `failed` - failed
     * `expired` - expired.
     *
     * @var string
     */
    protected $state;
    /**
     * DEPRECATED: Use state instead.
     *
     * @var string
     */
    protected $status;
    /**
     * @var string|null
     */
    protected $exportedFileName;
    /**
     * @var \DateTime
     */
    protected $createdAt;
    /**
     * @var float
     */
    protected $progressPercentage;
    /**
     * @var string
     */
    protected $url;

    public function getId(): int
    {
        return $this->id;
    }

    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getTable(): ?int
    {
        return $this->table;
    }

    public function setTable(?int $table): self
    {
        $this->initialized['table'] = true;
        $this->table = $table;

        return $this;
    }

    public function getView(): ?int
    {
        return $this->view;
    }

    public function setView(?int $view): self
    {
        $this->initialized['view'] = true;
        $this->view = $view;

        return $this;
    }

    public function getExporterType(): string
    {
        return $this->exporterType;
    }

    public function setExporterType(string $exporterType): self
    {
        $this->initialized['exporterType'] = true;
        $this->exporterType = $exporterType;

        return $this;
    }

    /**
     * * `pending` - pending
     * `exporting` - exporting
     * `cancelled` - cancelled
     * `finished` - finished
     * `failed` - failed
     * `expired` - expired.
     */
    public function getState(): string
    {
        return $this->state;
    }

    /**
     * * `pending` - pending
     * `exporting` - exporting
     * `cancelled` - cancelled
     * `finished` - finished
     * `failed` - failed
     * `expired` - expired.
     */
    public function setState(string $state): self
    {
        $this->initialized['state'] = true;
        $this->state = $state;

        return $this;
    }

    /**
     * DEPRECATED: Use state instead.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * DEPRECATED: Use state instead.
     */
    public function setStatus(string $status): self
    {
        $this->initialized['status'] = true;
        $this->status = $status;

        return $this;
    }

    public function getExportedFileName(): ?string
    {
        return $this->exportedFileName;
    }

    public function setExportedFileName(?string $exportedFileName): self
    {
        $this->initialized['exportedFileName'] = true;
        $this->exportedFileName = $exportedFileName;

        return $this;
    }

    public function getCreatedAt(): \DateTime
    {
        return $this->createdAt;
    }

    public function setCreatedAt(\DateTime $createdAt): self
    {
        $this->initialized['createdAt'] = true;
        $this->createdAt = $createdAt;

        return $this;
    }

    public function getProgressPercentage(): float
    {
        return $this->progressPercentage;
    }

    public function setProgressPercentage(float $progressPercentage): self
    {
        $this->initialized['progressPercentage'] = true;
        $this->progressPercentage = $progressPercentage;

        return $this;
    }

    public function getUrl(): string
    {
        return $this->url;
    }

    public function setUrl(string $url): self
    {
        $this->initialized['url'] = true;
        $this->url = $url;

        return $this;
    }
}
