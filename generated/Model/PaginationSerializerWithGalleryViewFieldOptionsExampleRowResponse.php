<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Model;

class PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * An object containing the field id as key and the properties related to view as value.
     *
     * @var array<string, GalleryViewFieldOptions>
     */
    protected $fieldOptions;
    /**
     * An object keyed by row id with a value being an object containing additional metadata about that row. A row might not have metadata and will not be present as a key if so.
     *
     * @var array<string, RowMetadata>
     */
    protected $rowMetadata;
    /**
     * The total amount of results.
     *
     * @var int
     */
    protected $count;
    /**
     * URL to the next page.
     *
     * @var string|null
     */
    protected $next;
    /**
     * URL to the previous page.
     *
     * @var string|null
     */
    protected $previous;
    /**
     * @var list<ExampleRowResponse>
     */
    protected $results;

    /**
     * An object containing the field id as key and the properties related to view as value.
     *
     * @return array<string, GalleryViewFieldOptions>
     */
    public function getFieldOptions(): iterable
    {
        return $this->fieldOptions;
    }

    /**
     * An object containing the field id as key and the properties related to view as value.
     *
     * @param array<string, GalleryViewFieldOptions> $fieldOptions
     */
    public function setFieldOptions(iterable $fieldOptions): self
    {
        $this->initialized['fieldOptions'] = true;
        $this->fieldOptions = $fieldOptions;

        return $this;
    }

    /**
     * An object keyed by row id with a value being an object containing additional metadata about that row. A row might not have metadata and will not be present as a key if so.
     *
     * @return array<string, RowMetadata>
     */
    public function getRowMetadata(): iterable
    {
        return $this->rowMetadata;
    }

    /**
     * An object keyed by row id with a value being an object containing additional metadata about that row. A row might not have metadata and will not be present as a key if so.
     *
     * @param array<string, RowMetadata> $rowMetadata
     */
    public function setRowMetadata(iterable $rowMetadata): self
    {
        $this->initialized['rowMetadata'] = true;
        $this->rowMetadata = $rowMetadata;

        return $this;
    }

    /**
     * The total amount of results.
     */
    public function getCount(): int
    {
        return $this->count;
    }

    /**
     * The total amount of results.
     */
    public function setCount(int $count): self
    {
        $this->initialized['count'] = true;
        $this->count = $count;

        return $this;
    }

    /**
     * URL to the next page.
     */
    public function getNext(): ?string
    {
        return $this->next;
    }

    /**
     * URL to the next page.
     */
    public function setNext(?string $next): self
    {
        $this->initialized['next'] = true;
        $this->next = $next;

        return $this;
    }

    /**
     * URL to the previous page.
     */
    public function getPrevious(): ?string
    {
        return $this->previous;
    }

    /**
     * URL to the previous page.
     */
    public function setPrevious(?string $previous): self
    {
        $this->initialized['previous'] = true;
        $this->previous = $previous;

        return $this;
    }

    /**
     * @return list<ExampleRowResponse>
     */
    public function getResults(): array
    {
        return $this->results;
    }

    /**
     * @param list<ExampleRowResponse> $results
     */
    public function setResults(array $results): self
    {
        $this->initialized['results'] = true;
        $this->results = $results;

        return $this;
    }
}
