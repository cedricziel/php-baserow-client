<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Model;

class LocalBaserowUpsertRowUpdateDataSource extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The id of the Baserow integration we want the data for.
     *
     * @var int|null
     */
    protected $integrationId;
    /**
     * @var string
     */
    protected $name;
    /**
     * The id of the Baserow table we want the data for.
     *
     * @var int|null
     */
    protected $tableId;
    /**
     * A formula for defining the intended row.
     *
     * @var string
     */
    protected $rowId;
    /**
     * The field mapping associated with this service.
     *
     * @var list<LocalBaserowTableServiceFieldMapping>
     */
    protected $fieldMappings;

    /**
     * The id of the Baserow integration we want the data for.
     */
    public function getIntegrationId(): ?int
    {
        return $this->integrationId;
    }

    /**
     * The id of the Baserow integration we want the data for.
     */
    public function setIntegrationId(?int $integrationId): self
    {
        $this->initialized['integrationId'] = true;
        $this->integrationId = $integrationId;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * The id of the Baserow table we want the data for.
     */
    public function getTableId(): ?int
    {
        return $this->tableId;
    }

    /**
     * The id of the Baserow table we want the data for.
     */
    public function setTableId(?int $tableId): self
    {
        $this->initialized['tableId'] = true;
        $this->tableId = $tableId;

        return $this;
    }

    /**
     * A formula for defining the intended row.
     */
    public function getRowId(): string
    {
        return $this->rowId;
    }

    /**
     * A formula for defining the intended row.
     */
    public function setRowId(string $rowId): self
    {
        $this->initialized['rowId'] = true;
        $this->rowId = $rowId;

        return $this;
    }

    /**
     * The field mapping associated with this service.
     *
     * @return list<LocalBaserowTableServiceFieldMapping>
     */
    public function getFieldMappings(): array
    {
        return $this->fieldMappings;
    }

    /**
     * The field mapping associated with this service.
     *
     * @param list<LocalBaserowTableServiceFieldMapping> $fieldMappings
     */
    public function setFieldMappings(array $fieldMappings): self
    {
        $this->initialized['fieldMappings'] = true;
        $this->fieldMappings = $fieldMappings;

        return $this;
    }
}
