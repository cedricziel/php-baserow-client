<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Model;

class SubDomainDomain extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $id;
    /**
     * The type of the domain.
     *
     * @var string
     */
    protected $type;
    /**
     * @var string
     */
    protected $domainName;
    /**
     * Lowest first.
     *
     * @var int
     */
    protected $order;
    /**
     * @var int
     */
    protected $builderId;
    /**
     * Last publication date of this domain.
     *
     * @var \DateTime|null
     */
    protected $lastPublished;

    public function getId(): int
    {
        return $this->id;
    }

    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The type of the domain.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * The type of the domain.
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    public function getDomainName(): string
    {
        return $this->domainName;
    }

    public function setDomainName(string $domainName): self
    {
        $this->initialized['domainName'] = true;
        $this->domainName = $domainName;

        return $this;
    }

    /**
     * Lowest first.
     */
    public function getOrder(): int
    {
        return $this->order;
    }

    /**
     * Lowest first.
     */
    public function setOrder(int $order): self
    {
        $this->initialized['order'] = true;
        $this->order = $order;

        return $this;
    }

    public function getBuilderId(): int
    {
        return $this->builderId;
    }

    public function setBuilderId(int $builderId): self
    {
        $this->initialized['builderId'] = true;
        $this->builderId = $builderId;

        return $this;
    }

    /**
     * Last publication date of this domain.
     */
    public function getLastPublished(): ?\DateTime
    {
        return $this->lastPublished;
    }

    /**
     * Last publication date of this domain.
     */
    public function setLastPublished(?\DateTime $lastPublished): self
    {
        $this->initialized['lastPublished'] = true;
        $this->lastPublished = $lastPublished;

        return $this;
    }
}
