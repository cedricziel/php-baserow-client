<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Model;

class TeamResponse extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $id;
    /**
     * A human friendly name for this team.
     *
     * @var string
     */
    protected $name;
    /**
     * DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future.
     *
     * @var int
     */
    protected $group;
    /**
     * The workspace that this team belongs to.
     *
     * @var int
     */
    protected $workspace;
    /**
     * @var \DateTime
     */
    protected $createdOn;
    /**
     * @var \DateTime
     */
    protected $updatedOn;
    /**
     * The uid of the role this team has in its workspace.
     *
     * @var string
     */
    protected $defaultRole;
    /**
     * The amount of subjects (e.g. users) that are currently assigned to this team.
     *
     * @var int
     */
    protected $subjectCount;
    /**
     * A sample, by default 10, of the most recent subjects to join this team.
     *
     * @var list<TeamSampleSubject>
     */
    protected $subjectSample;

    public function getId(): int
    {
        return $this->id;
    }

    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * A human friendly name for this team.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * A human friendly name for this team.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future.
     */
    public function getGroup(): int
    {
        return $this->group;
    }

    /**
     * DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future.
     */
    public function setGroup(int $group): self
    {
        $this->initialized['group'] = true;
        $this->group = $group;

        return $this;
    }

    /**
     * The workspace that this team belongs to.
     */
    public function getWorkspace(): int
    {
        return $this->workspace;
    }

    /**
     * The workspace that this team belongs to.
     */
    public function setWorkspace(int $workspace): self
    {
        $this->initialized['workspace'] = true;
        $this->workspace = $workspace;

        return $this;
    }

    public function getCreatedOn(): \DateTime
    {
        return $this->createdOn;
    }

    public function setCreatedOn(\DateTime $createdOn): self
    {
        $this->initialized['createdOn'] = true;
        $this->createdOn = $createdOn;

        return $this;
    }

    public function getUpdatedOn(): \DateTime
    {
        return $this->updatedOn;
    }

    public function setUpdatedOn(\DateTime $updatedOn): self
    {
        $this->initialized['updatedOn'] = true;
        $this->updatedOn = $updatedOn;

        return $this;
    }

    /**
     * The uid of the role this team has in its workspace.
     */
    public function getDefaultRole(): string
    {
        return $this->defaultRole;
    }

    /**
     * The uid of the role this team has in its workspace.
     */
    public function setDefaultRole(string $defaultRole): self
    {
        $this->initialized['defaultRole'] = true;
        $this->defaultRole = $defaultRole;

        return $this;
    }

    /**
     * The amount of subjects (e.g. users) that are currently assigned to this team.
     */
    public function getSubjectCount(): int
    {
        return $this->subjectCount;
    }

    /**
     * The amount of subjects (e.g. users) that are currently assigned to this team.
     */
    public function setSubjectCount(int $subjectCount): self
    {
        $this->initialized['subjectCount'] = true;
        $this->subjectCount = $subjectCount;

        return $this;
    }

    /**
     * A sample, by default 10, of the most recent subjects to join this team.
     *
     * @return list<TeamSampleSubject>
     */
    public function getSubjectSample(): array
    {
        return $this->subjectSample;
    }

    /**
     * A sample, by default 10, of the most recent subjects to join this team.
     *
     * @param list<TeamSampleSubject> $subjectSample
     */
    public function setSubjectSample(array $subjectSample): self
    {
        $this->initialized['subjectSample'] = true;
        $this->subjectSample = $subjectSample;

        return $this;
    }
}
