<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Model;

class ImageThemeConfigBlock extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * * `left` - Left
     * `center` - Center
     * `right` - Right.
     *
     * @var string
     */
    protected $imageAlignment;
    /**
     * The max-width for this image element.
     *
     * @var int
     */
    protected $imageMaxWidth;
    /**
     * The image max height.
     *
     * @var int
     */
    protected $imageMaxHeight;
    /**
     * The image constraint to apply to this image.
     *
     * `cover` - Cover
     * `contain` - Contain
     * `full-width` - Full Width
     *
     * @var string
     */
    protected $imageConstraint;

    /**
     * * `left` - Left
     * `center` - Center
     * `right` - Right.
     */
    public function getImageAlignment(): string
    {
        return $this->imageAlignment;
    }

    /**
     * * `left` - Left
     * `center` - Center
     * `right` - Right.
     */
    public function setImageAlignment(string $imageAlignment): self
    {
        $this->initialized['imageAlignment'] = true;
        $this->imageAlignment = $imageAlignment;

        return $this;
    }

    /**
     * The max-width for this image element.
     */
    public function getImageMaxWidth(): int
    {
        return $this->imageMaxWidth;
    }

    /**
     * The max-width for this image element.
     */
    public function setImageMaxWidth(int $imageMaxWidth): self
    {
        $this->initialized['imageMaxWidth'] = true;
        $this->imageMaxWidth = $imageMaxWidth;

        return $this;
    }

    /**
     * The image max height.
     */
    public function getImageMaxHeight(): int
    {
        return $this->imageMaxHeight;
    }

    /**
     * The image max height.
     */
    public function setImageMaxHeight(int $imageMaxHeight): self
    {
        $this->initialized['imageMaxHeight'] = true;
        $this->imageMaxHeight = $imageMaxHeight;

        return $this;
    }

    /**
     * The image constraint to apply to this image.
     *
     * `cover` - Cover
     * `contain` - Contain
     * `full-width` - Full Width
     */
    public function getImageConstraint(): string
    {
        return $this->imageConstraint;
    }

    /**
     * The image constraint to apply to this image.
     *
     * `cover` - Cover
     * `contain` - Contain
     * `full-width` - Full Width
     */
    public function setImageConstraint(string $imageConstraint): self
    {
        $this->initialized['imageConstraint'] = true;
        $this->imageConstraint = $imageConstraint;

        return $this;
    }
}
