<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Model;

class CsvExporterOptions extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Optional: The view for this table to export using its filters, sorts and other view specific settings.
     *
     * @var int|null
     */
    protected $viewId;
    /**
     * The file type to export to.
     *
     * `csv` - csv
     * `json` - json
     * `xml` - xml
     *
     * @var string
     */
    protected $exporterType;
    /**
     * The character set to use when creating the export file.
     *
     * `utf-8` - utf-8
     * `iso-8859-6` - iso-8859-6
     * `windows-1256` - windows-1256
     * `iso-8859-4` - iso-8859-4
     * `windows-1257` - windows-1257
     * `iso-8859-14` - iso-8859-14
     * `iso-8859-2` - iso-8859-2
     * `windows-1250` - windows-1250
     * `gbk` - gbk
     * `gb18030` - gb18030
     * `big5` - big5
     * `koi8-r` - koi8-r
     * `koi8-u` - koi8-u
     * `iso-8859-5` - iso-8859-5
     * `windows-1251` - windows-1251
     * `x-mac-cyrillic` - mac-cyrillic
     * `iso-8859-7` - iso-8859-7
     * `windows-1253` - windows-1253
     * `iso-8859-8` - iso-8859-8
     * `windows-1255` - windows-1255
     * `euc-jp` - euc-jp
     * `iso-2022-jp` - iso-2022-jp
     * `shift-jis` - shift-jis
     * `euc-kr` - euc-kr
     * `macintosh` - macintosh
     * `iso-8859-10` - iso-8859-10
     * `iso-8859-16` - iso-8859-16
     * `windows-874` - cp874
     * `windows-1254` - windows-1254
     * `windows-1258` - windows-1258
     * `iso-8859-1` - iso-8859-1
     * `windows-1252` - windows-1252
     * `iso-8859-3` - iso-8859-3
     *
     * @var string
     */
    protected $exportCharset = 'utf-8';
    /**
     * The value used to separate columns in the resulting csv file.
     *
     * `,` - ,
     * `;` - ;
     * `|` - |
     * `tab` -
     * `record_separator` - 
     * `unit_separator` - 
     *
     * @var string
     */
    protected $csvColumnSeparator = ',';
    /**
     * Whether or not to generate a header row at the top of the csv file.
     *
     * @var bool
     */
    protected $csvIncludeHeader = true;

    /**
     * Optional: The view for this table to export using its filters, sorts and other view specific settings.
     */
    public function getViewId(): ?int
    {
        return $this->viewId;
    }

    /**
     * Optional: The view for this table to export using its filters, sorts and other view specific settings.
     */
    public function setViewId(?int $viewId): self
    {
        $this->initialized['viewId'] = true;
        $this->viewId = $viewId;

        return $this;
    }

    /**
     * The file type to export to.
     *
     * `csv` - csv
     * `json` - json
     * `xml` - xml
     */
    public function getExporterType(): string
    {
        return $this->exporterType;
    }

    /**
     * The file type to export to.
     *
     * `csv` - csv
     * `json` - json
     * `xml` - xml
     */
    public function setExporterType(string $exporterType): self
    {
        $this->initialized['exporterType'] = true;
        $this->exporterType = $exporterType;

        return $this;
    }

    /**
     * The character set to use when creating the export file.
     *
     * `utf-8` - utf-8
     * `iso-8859-6` - iso-8859-6
     * `windows-1256` - windows-1256
     * `iso-8859-4` - iso-8859-4
     * `windows-1257` - windows-1257
     * `iso-8859-14` - iso-8859-14
     * `iso-8859-2` - iso-8859-2
     * `windows-1250` - windows-1250
     * `gbk` - gbk
     * `gb18030` - gb18030
     * `big5` - big5
     * `koi8-r` - koi8-r
     * `koi8-u` - koi8-u
     * `iso-8859-5` - iso-8859-5
     * `windows-1251` - windows-1251
     * `x-mac-cyrillic` - mac-cyrillic
     * `iso-8859-7` - iso-8859-7
     * `windows-1253` - windows-1253
     * `iso-8859-8` - iso-8859-8
     * `windows-1255` - windows-1255
     * `euc-jp` - euc-jp
     * `iso-2022-jp` - iso-2022-jp
     * `shift-jis` - shift-jis
     * `euc-kr` - euc-kr
     * `macintosh` - macintosh
     * `iso-8859-10` - iso-8859-10
     * `iso-8859-16` - iso-8859-16
     * `windows-874` - cp874
     * `windows-1254` - windows-1254
     * `windows-1258` - windows-1258
     * `iso-8859-1` - iso-8859-1
     * `windows-1252` - windows-1252
     * `iso-8859-3` - iso-8859-3
     */
    public function getExportCharset(): string
    {
        return $this->exportCharset;
    }

    /**
     * The character set to use when creating the export file.
     *
     * `utf-8` - utf-8
     * `iso-8859-6` - iso-8859-6
     * `windows-1256` - windows-1256
     * `iso-8859-4` - iso-8859-4
     * `windows-1257` - windows-1257
     * `iso-8859-14` - iso-8859-14
     * `iso-8859-2` - iso-8859-2
     * `windows-1250` - windows-1250
     * `gbk` - gbk
     * `gb18030` - gb18030
     * `big5` - big5
     * `koi8-r` - koi8-r
     * `koi8-u` - koi8-u
     * `iso-8859-5` - iso-8859-5
     * `windows-1251` - windows-1251
     * `x-mac-cyrillic` - mac-cyrillic
     * `iso-8859-7` - iso-8859-7
     * `windows-1253` - windows-1253
     * `iso-8859-8` - iso-8859-8
     * `windows-1255` - windows-1255
     * `euc-jp` - euc-jp
     * `iso-2022-jp` - iso-2022-jp
     * `shift-jis` - shift-jis
     * `euc-kr` - euc-kr
     * `macintosh` - macintosh
     * `iso-8859-10` - iso-8859-10
     * `iso-8859-16` - iso-8859-16
     * `windows-874` - cp874
     * `windows-1254` - windows-1254
     * `windows-1258` - windows-1258
     * `iso-8859-1` - iso-8859-1
     * `windows-1252` - windows-1252
     * `iso-8859-3` - iso-8859-3
     */
    public function setExportCharset(string $exportCharset): self
    {
        $this->initialized['exportCharset'] = true;
        $this->exportCharset = $exportCharset;

        return $this;
    }

    /**
     * The value used to separate columns in the resulting csv file.
     *
     * `,` - ,
     * `;` - ;
     * `|` - |
     * `tab` -
     * `record_separator` - 
     * `unit_separator` - 
     */
    public function getCsvColumnSeparator(): string
    {
        return $this->csvColumnSeparator;
    }

    /**
     * The value used to separate columns in the resulting csv file.
     *
     * `,` - ,
     * `;` - ;
     * `|` - |
     * `tab` -
     * `record_separator` - 
     * `unit_separator` - 
     */
    public function setCsvColumnSeparator(string $csvColumnSeparator): self
    {
        $this->initialized['csvColumnSeparator'] = true;
        $this->csvColumnSeparator = $csvColumnSeparator;

        return $this;
    }

    /**
     * Whether or not to generate a header row at the top of the csv file.
     */
    public function getCsvIncludeHeader(): bool
    {
        return $this->csvIncludeHeader;
    }

    /**
     * Whether or not to generate a header row at the top of the csv file.
     */
    public function setCsvIncludeHeader(bool $csvIncludeHeader): self
    {
        $this->initialized['csvIncludeHeader'] = true;
        $this->csvIncludeHeader = $csvIncludeHeader;

        return $this;
    }
}
