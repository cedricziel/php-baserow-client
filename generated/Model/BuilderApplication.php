<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Model;

class BuilderApplication extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $id;
    /**
     * @var string
     */
    protected $name;
    /**
     * @var int
     */
    protected $order;
    /**
     * @var string
     */
    protected $type;
    /**
     * DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future.
     *
     * @var BuilderApplicationGroup
     */
    protected $group;
    /**
     * The workspace that the application belongs to.
     *
     * @var BuilderApplicationWorkspace
     */
    protected $workspace;
    /**
     * This field is specific to the `builder` application and contains an array of pages that are in the builder.
     *
     * @var list<Page>
     */
    protected $pages;
    /**
     * This field is specific to the `builder` application and contains the theme settings.
     *
     * @var BuilderApplicationTheme
     */
    protected $theme;
    /**
     * The favicon image file.
     *
     * @var BuilderApplicationFaviconFile|null
     */
    protected $faviconFile;

    public function getId(): int
    {
        return $this->id;
    }

    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    public function getOrder(): int
    {
        return $this->order;
    }

    public function setOrder(int $order): self
    {
        $this->initialized['order'] = true;
        $this->order = $order;

        return $this;
    }

    public function getType(): string
    {
        return $this->type;
    }

    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future.
     */
    public function getGroup(): BuilderApplicationGroup
    {
        return $this->group;
    }

    /**
     * DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future.
     */
    public function setGroup(BuilderApplicationGroup $group): self
    {
        $this->initialized['group'] = true;
        $this->group = $group;

        return $this;
    }

    /**
     * The workspace that the application belongs to.
     */
    public function getWorkspace(): BuilderApplicationWorkspace
    {
        return $this->workspace;
    }

    /**
     * The workspace that the application belongs to.
     */
    public function setWorkspace(BuilderApplicationWorkspace $workspace): self
    {
        $this->initialized['workspace'] = true;
        $this->workspace = $workspace;

        return $this;
    }

    /**
     * This field is specific to the `builder` application and contains an array of pages that are in the builder.
     *
     * @return list<Page>
     */
    public function getPages(): array
    {
        return $this->pages;
    }

    /**
     * This field is specific to the `builder` application and contains an array of pages that are in the builder.
     *
     * @param list<Page> $pages
     */
    public function setPages(array $pages): self
    {
        $this->initialized['pages'] = true;
        $this->pages = $pages;

        return $this;
    }

    /**
     * This field is specific to the `builder` application and contains the theme settings.
     */
    public function getTheme(): BuilderApplicationTheme
    {
        return $this->theme;
    }

    /**
     * This field is specific to the `builder` application and contains the theme settings.
     */
    public function setTheme(BuilderApplicationTheme $theme): self
    {
        $this->initialized['theme'] = true;
        $this->theme = $theme;

        return $this;
    }

    /**
     * The favicon image file.
     */
    public function getFaviconFile(): ?BuilderApplicationFaviconFile
    {
        return $this->faviconFile;
    }

    /**
     * The favicon image file.
     */
    public function setFaviconFile(?BuilderApplicationFaviconFile $faviconFile): self
    {
        $this->initialized['faviconFile'] = true;
        $this->faviconFile = $faviconFile;

        return $this;
    }
}
