<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Model;

class LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The type of the app_auth_provider.
     * `local_baserow_password` - local_baserow_password.
     *
     * @var string
     */
    protected $type;
    /**
     * @var int
     */
    protected $userSourceId;
    /**
     * @var string|null
     */
    protected $domain;
    /**
     * The id of the field to use as password for the user account.
     *
     * @var int|null
     */
    protected $passwordFieldId;

    /**
     * The type of the app_auth_provider.
     * `local_baserow_password` - local_baserow_password.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * The type of the app_auth_provider.
     * `local_baserow_password` - local_baserow_password.
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    public function getUserSourceId(): int
    {
        return $this->userSourceId;
    }

    public function setUserSourceId(int $userSourceId): self
    {
        $this->initialized['userSourceId'] = true;
        $this->userSourceId = $userSourceId;

        return $this;
    }

    public function getDomain(): ?string
    {
        return $this->domain;
    }

    public function setDomain(?string $domain): self
    {
        $this->initialized['domain'] = true;
        $this->domain = $domain;

        return $this;
    }

    /**
     * The id of the field to use as password for the user account.
     */
    public function getPasswordFieldId(): ?int
    {
        return $this->passwordFieldId;
    }

    /**
     * The id of the field to use as password for the user account.
     */
    public function setPasswordFieldId(?int $passwordFieldId): self
    {
        $this->initialized['passwordFieldId'] = true;
        $this->passwordFieldId = $passwordFieldId;

        return $this;
    }
}
