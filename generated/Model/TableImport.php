<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Model;

class TableImport extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * A list of rows you want to add to the specified table. Each row is a list of values, one for each **writable** field. The field values must be ordered according to the field order in the table. All values must be compatible with the corresponding field type.
     *
     * Ex:
     * ```json
     * [
     * ["row1_field1_value", "row1_field2_value"],
     * ["row2_field1_value", "row2_field2_value"],
     * ]
     * ```
     * for adding two rows to a table with two writable fields.
     *
     * @var list<mixed>
     */
    protected $data;

    /**
     * A list of rows you want to add to the specified table. Each row is a list of values, one for each **writable** field. The field values must be ordered according to the field order in the table. All values must be compatible with the corresponding field type.
     *
     * Ex:
     * ```json
     * [
     * ["row1_field1_value", "row1_field2_value"],
     * ["row2_field1_value", "row2_field2_value"],
     * ]
     * ```
     * for adding two rows to a table with two writable fields.
     *
     * @return list<mixed>
     */
    public function getData(): array
    {
        return $this->data;
    }

    /**
     * A list of rows you want to add to the specified table. Each row is a list of values, one for each **writable** field. The field values must be ordered according to the field order in the table. All values must be compatible with the corresponding field type.
     *
     * Ex:
     * ```json
     * [
     * ["row1_field1_value", "row1_field2_value"],
     * ["row2_field1_value", "row2_field2_value"],
     * ]
     * ```
     * for adding two rows to a table with two writable fields.
     *
     * @param list<mixed> $data
     */
    public function setData(array $data): self
    {
        $this->initialized['data'] = true;
        $this->data = $data;

        return $this;
    }
}
