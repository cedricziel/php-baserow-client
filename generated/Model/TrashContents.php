<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Model;

class TrashContents extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $id;
    /**
     * @var string
     */
    protected $userWhoTrashed;
    /**
     * If an API consumer hasn't yet adopted the "workspace"
     * `trash_item_type`, give them the option to return "group"
     * by testing the `respond_with_workspace_rename` querystring.
     *
     * @var string
     */
    protected $trashItemType;
    /**
     * @var int
     */
    protected $trashItemId;
    /**
     * @var int|null
     */
    protected $parentTrashItemId;
    /**
     * @var \DateTime
     */
    protected $trashedAt;
    /**
     * @var int|null
     */
    protected $application;
    /**
     * @var int
     */
    protected $group;
    /**
     * @var int
     */
    protected $workspace;
    /**
     * @var string
     */
    protected $name;
    /**
     * @var list<string>|null
     */
    protected $names;
    /**
     * @var string|null
     */
    protected $parentName;

    public function getId(): int
    {
        return $this->id;
    }

    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getUserWhoTrashed(): string
    {
        return $this->userWhoTrashed;
    }

    public function setUserWhoTrashed(string $userWhoTrashed): self
    {
        $this->initialized['userWhoTrashed'] = true;
        $this->userWhoTrashed = $userWhoTrashed;

        return $this;
    }

    /**
     * If an API consumer hasn't yet adopted the "workspace"
     * `trash_item_type`, give them the option to return "group"
     * by testing the `respond_with_workspace_rename` querystring.
     */
    public function getTrashItemType(): string
    {
        return $this->trashItemType;
    }

    /**
     * If an API consumer hasn't yet adopted the "workspace"
     * `trash_item_type`, give them the option to return "group"
     * by testing the `respond_with_workspace_rename` querystring.
     */
    public function setTrashItemType(string $trashItemType): self
    {
        $this->initialized['trashItemType'] = true;
        $this->trashItemType = $trashItemType;

        return $this;
    }

    public function getTrashItemId(): int
    {
        return $this->trashItemId;
    }

    public function setTrashItemId(int $trashItemId): self
    {
        $this->initialized['trashItemId'] = true;
        $this->trashItemId = $trashItemId;

        return $this;
    }

    public function getParentTrashItemId(): ?int
    {
        return $this->parentTrashItemId;
    }

    public function setParentTrashItemId(?int $parentTrashItemId): self
    {
        $this->initialized['parentTrashItemId'] = true;
        $this->parentTrashItemId = $parentTrashItemId;

        return $this;
    }

    public function getTrashedAt(): \DateTime
    {
        return $this->trashedAt;
    }

    public function setTrashedAt(\DateTime $trashedAt): self
    {
        $this->initialized['trashedAt'] = true;
        $this->trashedAt = $trashedAt;

        return $this;
    }

    public function getApplication(): ?int
    {
        return $this->application;
    }

    public function setApplication(?int $application): self
    {
        $this->initialized['application'] = true;
        $this->application = $application;

        return $this;
    }

    public function getGroup(): int
    {
        return $this->group;
    }

    public function setGroup(int $group): self
    {
        $this->initialized['group'] = true;
        $this->group = $group;

        return $this;
    }

    public function getWorkspace(): int
    {
        return $this->workspace;
    }

    public function setWorkspace(int $workspace): self
    {
        $this->initialized['workspace'] = true;
        $this->workspace = $workspace;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * @return list<string>|null
     */
    public function getNames(): ?array
    {
        return $this->names;
    }

    /**
     * @param list<string>|null $names
     */
    public function setNames(?array $names): self
    {
        $this->initialized['names'] = true;
        $this->names = $names;

        return $this;
    }

    public function getParentName(): ?string
    {
        return $this->parentName;
    }

    public function setParentName(?string $parentName): self
    {
        $this->initialized['parentName'] = true;
        $this->parentName = $parentName;

        return $this;
    }
}
