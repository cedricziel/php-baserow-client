<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Model;

class PublicBuilder extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $id;
    /**
     * @var string
     */
    protected $name;
    /**
     * This field is specific to the `builder` application and contains an array of pages that are in the builder.
     *
     * @var list<PublicPage>
     */
    protected $pages;
    /**
     * The type of the object.
     *
     * @var string
     */
    protected $type;
    /**
     * This field is specific to the `builder` application and contains the theme settings.
     *
     * @var PublicBuilderTheme
     */
    protected $theme;
    /**
     * The user sources related with this builder.
     *
     * @var list<mixed>
     */
    protected $userSources;
    /**
     * This field is specific to the `builder` application and contains the favicon settings.
     *
     * @var string
     */
    protected $faviconFile;

    public function getId(): int
    {
        return $this->id;
    }

    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * This field is specific to the `builder` application and contains an array of pages that are in the builder.
     *
     * @return list<PublicPage>
     */
    public function getPages(): array
    {
        return $this->pages;
    }

    /**
     * This field is specific to the `builder` application and contains an array of pages that are in the builder.
     *
     * @param list<PublicPage> $pages
     */
    public function setPages(array $pages): self
    {
        $this->initialized['pages'] = true;
        $this->pages = $pages;

        return $this;
    }

    /**
     * The type of the object.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * The type of the object.
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * This field is specific to the `builder` application and contains the theme settings.
     */
    public function getTheme(): PublicBuilderTheme
    {
        return $this->theme;
    }

    /**
     * This field is specific to the `builder` application and contains the theme settings.
     */
    public function setTheme(PublicBuilderTheme $theme): self
    {
        $this->initialized['theme'] = true;
        $this->theme = $theme;

        return $this;
    }

    /**
     * The user sources related with this builder.
     *
     * @return list<mixed>
     */
    public function getUserSources(): array
    {
        return $this->userSources;
    }

    /**
     * The user sources related with this builder.
     *
     * @param list<mixed> $userSources
     */
    public function setUserSources(array $userSources): self
    {
        $this->initialized['userSources'] = true;
        $this->userSources = $userSources;

        return $this;
    }

    /**
     * This field is specific to the `builder` application and contains the favicon settings.
     */
    public function getFaviconFile(): string
    {
        return $this->faviconFile;
    }

    /**
     * This field is specific to the `builder` application and contains the favicon settings.
     */
    public function setFaviconFile(string $faviconFile): self
    {
        $this->initialized['faviconFile'] = true;
        $this->faviconFile = $faviconFile;

        return $this;
    }
}
