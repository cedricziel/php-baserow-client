<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\Baserow\Generated\Normalizer;

use CedricZiel\Baserow\Generated\Runtime\Normalizer\CheckArray;
use CedricZiel\Baserow\Generated\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class ExportJobNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return \CedricZiel\Baserow\Generated\Model\ExportJob::class === $type;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && \CedricZiel\Baserow\Generated\Model\ExportJob::class === get_class($data);
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \CedricZiel\Baserow\Generated\Model\ExportJob();
            if (\array_key_exists('progress_percentage', $data) && \is_int($data['progress_percentage'])) {
                $data['progress_percentage'] = (float) $data['progress_percentage'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('id', $data)) {
                $object->setId($data['id']);
                unset($data['id']);
            }
            if (\array_key_exists('table', $data) && null !== $data['table']) {
                $object->setTable($data['table']);
                unset($data['table']);
            } elseif (\array_key_exists('table', $data) && null === $data['table']) {
                $object->setTable(null);
            }
            if (\array_key_exists('view', $data) && null !== $data['view']) {
                $object->setView($data['view']);
                unset($data['view']);
            } elseif (\array_key_exists('view', $data) && null === $data['view']) {
                $object->setView(null);
            }
            if (\array_key_exists('exporter_type', $data)) {
                $object->setExporterType($data['exporter_type']);
                unset($data['exporter_type']);
            }
            if (\array_key_exists('state', $data)) {
                $object->setState($data['state']);
                unset($data['state']);
            }
            if (\array_key_exists('status', $data)) {
                $object->setStatus($data['status']);
                unset($data['status']);
            }
            if (\array_key_exists('exported_file_name', $data) && null !== $data['exported_file_name']) {
                $object->setExportedFileName($data['exported_file_name']);
                unset($data['exported_file_name']);
            } elseif (\array_key_exists('exported_file_name', $data) && null === $data['exported_file_name']) {
                $object->setExportedFileName(null);
            }
            if (\array_key_exists('created_at', $data)) {
                $object->setCreatedAt(\DateTime::createFromFormat('Y-m-d\TH:i:sP', $data['created_at']));
                unset($data['created_at']);
            }
            if (\array_key_exists('progress_percentage', $data)) {
                $object->setProgressPercentage($data['progress_percentage']);
                unset($data['progress_percentage']);
            }
            if (\array_key_exists('url', $data)) {
                $object->setUrl($data['url']);
                unset($data['url']);
            }
            foreach ($data as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value;
                }
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('table') && null !== $object->getTable()) {
                $data['table'] = $object->getTable();
            }
            if ($object->isInitialized('view') && null !== $object->getView()) {
                $data['view'] = $object->getView();
            }
            $data['exporter_type'] = $object->getExporterType();
            $data['state'] = $object->getState();
            if ($object->isInitialized('exportedFileName') && null !== $object->getExportedFileName()) {
                $data['exported_file_name'] = $object->getExportedFileName();
            }
            if ($object->isInitialized('progressPercentage') && null !== $object->getProgressPercentage()) {
                $data['progress_percentage'] = $object->getProgressPercentage();
            }
            foreach ($object as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\CedricZiel\Baserow\Generated\Model\ExportJob::class => false];
        }
    }
} else {
    class ExportJobNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return \CedricZiel\Baserow\Generated\Model\ExportJob::class === $type;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && \CedricZiel\Baserow\Generated\Model\ExportJob::class === get_class($data);
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \CedricZiel\Baserow\Generated\Model\ExportJob();
            if (\array_key_exists('progress_percentage', $data) && \is_int($data['progress_percentage'])) {
                $data['progress_percentage'] = (float) $data['progress_percentage'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('id', $data)) {
                $object->setId($data['id']);
                unset($data['id']);
            }
            if (\array_key_exists('table', $data) && null !== $data['table']) {
                $object->setTable($data['table']);
                unset($data['table']);
            } elseif (\array_key_exists('table', $data) && null === $data['table']) {
                $object->setTable(null);
            }
            if (\array_key_exists('view', $data) && null !== $data['view']) {
                $object->setView($data['view']);
                unset($data['view']);
            } elseif (\array_key_exists('view', $data) && null === $data['view']) {
                $object->setView(null);
            }
            if (\array_key_exists('exporter_type', $data)) {
                $object->setExporterType($data['exporter_type']);
                unset($data['exporter_type']);
            }
            if (\array_key_exists('state', $data)) {
                $object->setState($data['state']);
                unset($data['state']);
            }
            if (\array_key_exists('status', $data)) {
                $object->setStatus($data['status']);
                unset($data['status']);
            }
            if (\array_key_exists('exported_file_name', $data) && null !== $data['exported_file_name']) {
                $object->setExportedFileName($data['exported_file_name']);
                unset($data['exported_file_name']);
            } elseif (\array_key_exists('exported_file_name', $data) && null === $data['exported_file_name']) {
                $object->setExportedFileName(null);
            }
            if (\array_key_exists('created_at', $data)) {
                $object->setCreatedAt(\DateTime::createFromFormat('Y-m-d\TH:i:sP', $data['created_at']));
                unset($data['created_at']);
            }
            if (\array_key_exists('progress_percentage', $data)) {
                $object->setProgressPercentage($data['progress_percentage']);
                unset($data['progress_percentage']);
            }
            if (\array_key_exists('url', $data)) {
                $object->setUrl($data['url']);
                unset($data['url']);
            }
            foreach ($data as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value;
                }
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('table') && null !== $object->getTable()) {
                $data['table'] = $object->getTable();
            }
            if ($object->isInitialized('view') && null !== $object->getView()) {
                $data['view'] = $object->getView();
            }
            $data['exporter_type'] = $object->getExporterType();
            $data['state'] = $object->getState();
            if ($object->isInitialized('exportedFileName') && null !== $object->getExportedFileName()) {
                $data['exported_file_name'] = $object->getExportedFileName();
            }
            if ($object->isInitialized('progressPercentage') && null !== $object->getProgressPercentage()) {
                $data['progress_percentage'] = $object->getProgressPercentage();
            }
            foreach ($object as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\CedricZiel\Baserow\Generated\Model\ExportJob::class => false];
        }
    }
}
