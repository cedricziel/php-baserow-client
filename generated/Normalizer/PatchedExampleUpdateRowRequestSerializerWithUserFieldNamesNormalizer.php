<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\phpbaserowclient\Generated\Normalizer;

use cedricziel\phpbaserowclient\Generated\Runtime\Normalizer\CheckArray;
use cedricziel\phpbaserowclient\Generated\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class PatchedExampleUpdateRowRequestSerializerWithUserFieldNamesNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return \cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames::class === $type;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && \cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames::class === get_class($data);
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames();
            if (\array_key_exists('field_13', $data) && \is_int($data['field_13'])) {
                $data['field_13'] = (float) $data['field_13'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('field_1', $data) && null !== $data['field_1']) {
                $object->setField1($data['field_1']);
                unset($data['field_1']);
            } elseif (\array_key_exists('field_1', $data) && null === $data['field_1']) {
                $object->setField1(null);
            }
            if (\array_key_exists('field_2', $data) && null !== $data['field_2']) {
                $object->setField2($data['field_2']);
                unset($data['field_2']);
            } elseif (\array_key_exists('field_2', $data) && null === $data['field_2']) {
                $object->setField2(null);
            }
            if (\array_key_exists('field_3', $data) && null !== $data['field_3']) {
                $object->setField3($data['field_3']);
                unset($data['field_3']);
            } elseif (\array_key_exists('field_3', $data) && null === $data['field_3']) {
                $object->setField3(null);
            }
            if (\array_key_exists('field_4', $data) && null !== $data['field_4']) {
                $object->setField4($data['field_4']);
                unset($data['field_4']);
            } elseif (\array_key_exists('field_4', $data) && null === $data['field_4']) {
                $object->setField4(null);
            }
            if (\array_key_exists('field_5', $data) && null !== $data['field_5']) {
                $object->setField5($data['field_5']);
                unset($data['field_5']);
            } elseif (\array_key_exists('field_5', $data) && null === $data['field_5']) {
                $object->setField5(null);
            }
            if (\array_key_exists('field_6', $data)) {
                $object->setField6($data['field_6']);
                unset($data['field_6']);
            }
            if (\array_key_exists('field_7', $data)) {
                $object->setField7($data['field_7']);
                unset($data['field_7']);
            }
            if (\array_key_exists('field_8', $data) && null !== $data['field_8']) {
                $object->setField8(\DateTime::createFromFormat('Y-m-d', $data['field_8'])->setTime(0, 0, 0));
                unset($data['field_8']);
            } elseif (\array_key_exists('field_8', $data) && null === $data['field_8']) {
                $object->setField8(null);
            }
            if (\array_key_exists('field_13', $data) && null !== $data['field_13']) {
                $object->setField13($data['field_13']);
                unset($data['field_13']);
            } elseif (\array_key_exists('field_13', $data) && null === $data['field_13']) {
                $object->setField13(null);
            }
            if (\array_key_exists('field_14', $data)) {
                $values = [];
                foreach ($data['field_14'] as $value) {
                    $values[] = $value;
                }
                $object->setField14($values);
                unset($data['field_14']);
            }
            if (\array_key_exists('field_15', $data) && null !== $data['field_15']) {
                $values_1 = [];
                foreach ($data['field_15'] as $value_1) {
                    $values_1[] = $value_1;
                }
                $object->setField15($values_1);
                unset($data['field_15']);
            } elseif (\array_key_exists('field_15', $data) && null === $data['field_15']) {
                $object->setField15(null);
            }
            if (\array_key_exists('field_16', $data) && null !== $data['field_16']) {
                $object->setField16($data['field_16']);
                unset($data['field_16']);
            } elseif (\array_key_exists('field_16', $data) && null === $data['field_16']) {
                $object->setField16(null);
            }
            if (\array_key_exists('field_17', $data)) {
                $values_2 = [];
                foreach ($data['field_17'] as $value_2) {
                    $values_2[] = $value_2;
                }
                $object->setField17($values_2);
                unset($data['field_17']);
            }
            if (\array_key_exists('field_18', $data) && null !== $data['field_18']) {
                $object->setField18($data['field_18']);
                unset($data['field_18']);
            } elseif (\array_key_exists('field_18', $data) && null === $data['field_18']) {
                $object->setField18(null);
            }
            if (\array_key_exists('field_23', $data)) {
                $values_3 = [];
                foreach ($data['field_23'] as $value_3) {
                    $values_3[] = $this->denormalizer->denormalize($value_3, \cedricziel\phpbaserowclient\Generated\Model\Collaborator::class, 'json', $context);
                }
                $object->setField23($values_3);
                unset($data['field_23']);
            }
            if (\array_key_exists('field_26', $data) && null !== $data['field_26']) {
                $object->setField26($data['field_26']);
                unset($data['field_26']);
            } elseif (\array_key_exists('field_26', $data) && null === $data['field_26']) {
                $object->setField26(null);
            }
            if (\array_key_exists('field_27', $data) && null !== $data['field_27']) {
                $object->setField27($data['field_27']);
                unset($data['field_27']);
            } elseif (\array_key_exists('field_27', $data) && null === $data['field_27']) {
                $object->setField27(null);
            }
            foreach ($data as $key => $value_4) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value_4;
                }
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('field1') && null !== $object->getField1()) {
                $data['field_1'] = $object->getField1();
            }
            if ($object->isInitialized('field2') && null !== $object->getField2()) {
                $data['field_2'] = $object->getField2();
            }
            if ($object->isInitialized('field3') && null !== $object->getField3()) {
                $data['field_3'] = $object->getField3();
            }
            if ($object->isInitialized('field4') && null !== $object->getField4()) {
                $data['field_4'] = $object->getField4();
            }
            if ($object->isInitialized('field5') && null !== $object->getField5()) {
                $data['field_5'] = $object->getField5();
            }
            if ($object->isInitialized('field6') && null !== $object->getField6()) {
                $data['field_6'] = $object->getField6();
            }
            if ($object->isInitialized('field7') && null !== $object->getField7()) {
                $data['field_7'] = $object->getField7();
            }
            if ($object->isInitialized('field8') && null !== $object->getField8()) {
                $data['field_8'] = $object->getField8()->format('Y-m-d');
            }
            if ($object->isInitialized('field13') && null !== $object->getField13()) {
                $data['field_13'] = $object->getField13();
            }
            if ($object->isInitialized('field14') && null !== $object->getField14()) {
                $values = [];
                foreach ($object->getField14() as $value) {
                    $values[] = $value;
                }
                $data['field_14'] = $values;
            }
            if ($object->isInitialized('field15') && null !== $object->getField15()) {
                $values_1 = [];
                foreach ($object->getField15() as $value_1) {
                    $values_1[] = $value_1;
                }
                $data['field_15'] = $values_1;
            }
            if ($object->isInitialized('field16') && null !== $object->getField16()) {
                $data['field_16'] = $object->getField16();
            }
            if ($object->isInitialized('field17') && null !== $object->getField17()) {
                $values_2 = [];
                foreach ($object->getField17() as $value_2) {
                    $values_2[] = $value_2;
                }
                $data['field_17'] = $values_2;
            }
            if ($object->isInitialized('field18') && null !== $object->getField18()) {
                $data['field_18'] = $object->getField18();
            }
            if ($object->isInitialized('field23') && null !== $object->getField23()) {
                $values_3 = [];
                foreach ($object->getField23() as $value_3) {
                    $values_3[] = $this->normalizer->normalize($value_3, 'json', $context);
                }
                $data['field_23'] = $values_3;
            }
            if ($object->isInitialized('field26') && null !== $object->getField26()) {
                $data['field_26'] = $object->getField26();
            }
            if ($object->isInitialized('field27') && null !== $object->getField27()) {
                $data['field_27'] = $object->getField27();
            }
            foreach ($object as $key => $value_4) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value_4;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames::class => false];
        }
    }
} else {
    class PatchedExampleUpdateRowRequestSerializerWithUserFieldNamesNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return \cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames::class === $type;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && \cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames::class === get_class($data);
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames();
            if (\array_key_exists('field_13', $data) && \is_int($data['field_13'])) {
                $data['field_13'] = (float) $data['field_13'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('field_1', $data) && null !== $data['field_1']) {
                $object->setField1($data['field_1']);
                unset($data['field_1']);
            } elseif (\array_key_exists('field_1', $data) && null === $data['field_1']) {
                $object->setField1(null);
            }
            if (\array_key_exists('field_2', $data) && null !== $data['field_2']) {
                $object->setField2($data['field_2']);
                unset($data['field_2']);
            } elseif (\array_key_exists('field_2', $data) && null === $data['field_2']) {
                $object->setField2(null);
            }
            if (\array_key_exists('field_3', $data) && null !== $data['field_3']) {
                $object->setField3($data['field_3']);
                unset($data['field_3']);
            } elseif (\array_key_exists('field_3', $data) && null === $data['field_3']) {
                $object->setField3(null);
            }
            if (\array_key_exists('field_4', $data) && null !== $data['field_4']) {
                $object->setField4($data['field_4']);
                unset($data['field_4']);
            } elseif (\array_key_exists('field_4', $data) && null === $data['field_4']) {
                $object->setField4(null);
            }
            if (\array_key_exists('field_5', $data) && null !== $data['field_5']) {
                $object->setField5($data['field_5']);
                unset($data['field_5']);
            } elseif (\array_key_exists('field_5', $data) && null === $data['field_5']) {
                $object->setField5(null);
            }
            if (\array_key_exists('field_6', $data)) {
                $object->setField6($data['field_6']);
                unset($data['field_6']);
            }
            if (\array_key_exists('field_7', $data)) {
                $object->setField7($data['field_7']);
                unset($data['field_7']);
            }
            if (\array_key_exists('field_8', $data) && null !== $data['field_8']) {
                $object->setField8(\DateTime::createFromFormat('Y-m-d', $data['field_8'])->setTime(0, 0, 0));
                unset($data['field_8']);
            } elseif (\array_key_exists('field_8', $data) && null === $data['field_8']) {
                $object->setField8(null);
            }
            if (\array_key_exists('field_13', $data) && null !== $data['field_13']) {
                $object->setField13($data['field_13']);
                unset($data['field_13']);
            } elseif (\array_key_exists('field_13', $data) && null === $data['field_13']) {
                $object->setField13(null);
            }
            if (\array_key_exists('field_14', $data)) {
                $values = [];
                foreach ($data['field_14'] as $value) {
                    $values[] = $value;
                }
                $object->setField14($values);
                unset($data['field_14']);
            }
            if (\array_key_exists('field_15', $data) && null !== $data['field_15']) {
                $values_1 = [];
                foreach ($data['field_15'] as $value_1) {
                    $values_1[] = $value_1;
                }
                $object->setField15($values_1);
                unset($data['field_15']);
            } elseif (\array_key_exists('field_15', $data) && null === $data['field_15']) {
                $object->setField15(null);
            }
            if (\array_key_exists('field_16', $data) && null !== $data['field_16']) {
                $object->setField16($data['field_16']);
                unset($data['field_16']);
            } elseif (\array_key_exists('field_16', $data) && null === $data['field_16']) {
                $object->setField16(null);
            }
            if (\array_key_exists('field_17', $data)) {
                $values_2 = [];
                foreach ($data['field_17'] as $value_2) {
                    $values_2[] = $value_2;
                }
                $object->setField17($values_2);
                unset($data['field_17']);
            }
            if (\array_key_exists('field_18', $data) && null !== $data['field_18']) {
                $object->setField18($data['field_18']);
                unset($data['field_18']);
            } elseif (\array_key_exists('field_18', $data) && null === $data['field_18']) {
                $object->setField18(null);
            }
            if (\array_key_exists('field_23', $data)) {
                $values_3 = [];
                foreach ($data['field_23'] as $value_3) {
                    $values_3[] = $this->denormalizer->denormalize($value_3, \cedricziel\phpbaserowclient\Generated\Model\Collaborator::class, 'json', $context);
                }
                $object->setField23($values_3);
                unset($data['field_23']);
            }
            if (\array_key_exists('field_26', $data) && null !== $data['field_26']) {
                $object->setField26($data['field_26']);
                unset($data['field_26']);
            } elseif (\array_key_exists('field_26', $data) && null === $data['field_26']) {
                $object->setField26(null);
            }
            if (\array_key_exists('field_27', $data) && null !== $data['field_27']) {
                $object->setField27($data['field_27']);
                unset($data['field_27']);
            } elseif (\array_key_exists('field_27', $data) && null === $data['field_27']) {
                $object->setField27(null);
            }
            foreach ($data as $key => $value_4) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value_4;
                }
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('field1') && null !== $object->getField1()) {
                $data['field_1'] = $object->getField1();
            }
            if ($object->isInitialized('field2') && null !== $object->getField2()) {
                $data['field_2'] = $object->getField2();
            }
            if ($object->isInitialized('field3') && null !== $object->getField3()) {
                $data['field_3'] = $object->getField3();
            }
            if ($object->isInitialized('field4') && null !== $object->getField4()) {
                $data['field_4'] = $object->getField4();
            }
            if ($object->isInitialized('field5') && null !== $object->getField5()) {
                $data['field_5'] = $object->getField5();
            }
            if ($object->isInitialized('field6') && null !== $object->getField6()) {
                $data['field_6'] = $object->getField6();
            }
            if ($object->isInitialized('field7') && null !== $object->getField7()) {
                $data['field_7'] = $object->getField7();
            }
            if ($object->isInitialized('field8') && null !== $object->getField8()) {
                $data['field_8'] = $object->getField8()->format('Y-m-d');
            }
            if ($object->isInitialized('field13') && null !== $object->getField13()) {
                $data['field_13'] = $object->getField13();
            }
            if ($object->isInitialized('field14') && null !== $object->getField14()) {
                $values = [];
                foreach ($object->getField14() as $value) {
                    $values[] = $value;
                }
                $data['field_14'] = $values;
            }
            if ($object->isInitialized('field15') && null !== $object->getField15()) {
                $values_1 = [];
                foreach ($object->getField15() as $value_1) {
                    $values_1[] = $value_1;
                }
                $data['field_15'] = $values_1;
            }
            if ($object->isInitialized('field16') && null !== $object->getField16()) {
                $data['field_16'] = $object->getField16();
            }
            if ($object->isInitialized('field17') && null !== $object->getField17()) {
                $values_2 = [];
                foreach ($object->getField17() as $value_2) {
                    $values_2[] = $value_2;
                }
                $data['field_17'] = $values_2;
            }
            if ($object->isInitialized('field18') && null !== $object->getField18()) {
                $data['field_18'] = $object->getField18();
            }
            if ($object->isInitialized('field23') && null !== $object->getField23()) {
                $values_3 = [];
                foreach ($object->getField23() as $value_3) {
                    $values_3[] = $this->normalizer->normalize($value_3, 'json', $context);
                }
                $data['field_23'] = $values_3;
            }
            if ($object->isInitialized('field26') && null !== $object->getField26()) {
                $data['field_26'] = $object->getField26();
            }
            if ($object->isInitialized('field27') && null !== $object->getField27()) {
                $data['field_27'] = $object->getField27();
            }
            foreach ($object as $key => $value_4) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value_4;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\cedricziel\phpbaserowclient\Generated\Model\PatchedExampleUpdateRowRequestSerializerWithUserFieldNames::class => false];
        }
    }
}
